// Code generated by reactGen. DO NOT EDIT.

package react

// TrackProps defines the properties for the <Track> element.
type TrackProps struct {
	AriaExpanded            bool
	AriaHasPopup            bool
	AriaLabelledBy          string
	ClassName               string
	DangerouslySetInnerHTML *DangerousInnerHTML
	DataSet
	Default bool
	ID      string
	Key     string
	Kind    string
	Label   string

	OnChange
	OnClick

	Ref
	Role    string
	Src     string
	SrcLang string
	Style   *CSS
}

func (t *TrackProps) assign(_v *_TrackProps) {

	_v.AriaExpanded = t.AriaExpanded

	_v.AriaHasPopup = t.AriaHasPopup

	_v.AriaLabelledBy = t.AriaLabelledBy

	_v.ClassName = t.ClassName

	_v.DangerouslySetInnerHTML = t.DangerouslySetInnerHTML

	if t.DataSet != nil {
		for dk, dv := range t.DataSet {
			_v.o.Set("data-"+dk, dv)
		}
	}

	_v.Default = t.Default

	if t.ID != "" {
		_v.ID = t.ID
	}

	if t.Key != "" {
		_v.Key = t.Key
	}

	_v.Kind = t.Kind

	_v.Label = t.Label

	if t.OnChange != nil {
		_v.o.Set("onChange", t.OnChange.OnChange)
	}

	if t.OnClick != nil {
		_v.o.Set("onClick", t.OnClick.OnClick)
	}

	if t.Ref != nil {
		_v.o.Set("ref", t.Ref.Ref)
	}

	_v.Role = t.Role

	_v.Src = t.Src

	_v.SrcLang = t.SrcLang

	// TODO: until we have a resolution on
	// https://github.com/gopherjs/gopherjs/issues/236
	_v.Style = t.Style.hack()

}
